@use "../abstracts/functions" as f;
@use "../abstracts/mixins" as m;

html {
  // if mobile menu is open and window width is increased, scroll is enabled
  @include m.breakpoint(medium) {
    overflow-y: auto !important;
  }
}

// padding between bottom of nav link and edge of nav container for underline
$padding-bottom: f.rem(40);

.nav {
  position: relative;
  z-index: 2;

  &::after {
    content: "";
    position: absolute;
    inset: 0;
    z-index: -1;

    @supports (-webkit-backdrop-filter: none) or (backdrop-filter: none) {
      -webkit-backdrop-filter: blur(40.77px);
      background-color: rgb(255, 255, 255, 0.05);
      backdrop-filter: blur(40.77px);
    }

    /* slightly transparent fallback for browsers not supporting backdrop-filter */
    @supports not ((-webkit-backdrop-filter: none) or (backdrop-filter: none)) {
      background-color: rgba(11, 13, 23, 0.9);
    }
  }

  &::before {
    height: 1px;
    content: "";
    display: none;
    position: absolute;
    background-color: var(--clr-secondary);
    opacity: 0.2;
    left: 0;
    transform: translate(-94%, f.rem(12));
    transition: width 900ms ease-in-out;

    @include m.breakpoint(large) {
      width: 6vw;
      display: block;
    }
    @include m.breakpoint(xlarge) {
      width: min(26vw, f.rem(473));
    }
  }

  @include m.breakpoint(medium) {
    padding-top: f.rem(40);
    padding-inline: f.rem(48);
    padding-bottom: $padding-bottom;
  }
  @include m.breakpoint(large) {
    padding-inline: clamp(f.rem(112), 10vw, f.rem(160));
  }
  @include m.breakpoint(small-only) {
    position: absolute;
    inset: 0;
    left: 100%;
    transition: 0.5s;
    opacity: 0;
    overflow-x: hidden;

    &[data-visible="true"] {
      left: 33%;
      opacity: 1;

      @include m.breakpoint(xsmall) {
        left: 0;
      }
    }
  }

  &__list {
    counter-reset: counter;
    display: flex;

    @include m.breakpoint(small-only) {
      flex-direction: column;
      gap: f.rem(32);
      height: 100%;
      padding-top: f.rem(118);
      padding-left: f.rem(32);
    }

    @include m.breakpoint(medium) {
      align-items: center;
      justify-content: space-between;
      gap: f.rem(38);
    }
  }

  &__item {
    position: relative;

    @include m.breakpoint(small-only, large) {
      &:first-of-type {
        counter-set: counter 0;
      }
      counter-increment: counter;
    }
  }

  &__link {
    font-size: f.rem(14);
    text-transform: uppercase;
    text-decoration: none;
    letter-spacing: f.rem(2.7);
    color: var(--clr-secondary);

    @include m.breakpoint(medium) {
      &::after {
        content: "";
        display: block;
        position: absolute;
        bottom: calc($padding-bottom * -1);
        height: f.rem(3);
        width: 100%;
        background-color: var(--clr-secondary);
        transition: opacity 200ms ease-in-out;
        opacity: 0;
      }

      &:hover::after {
        opacity: 0.5;
      }

      &.active::after {
        opacity: 1;
      }
    }

    @include m.breakpoint(small-only, large) {
      display: flex;
      gap: f.rem(12);
      font-size: f.rem(16);

      &::before {
        content: counter(counter, decimal-leading-zero);
        font-weight: var(--fw-bold);
      }
    }
  }
}
